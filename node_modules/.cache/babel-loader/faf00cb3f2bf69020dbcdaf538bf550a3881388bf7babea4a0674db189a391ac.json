{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getUser: () => api.get('/auth/user'),\n  updateNotifications: preferences => api.put('/auth/notifications', preferences),\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  }),\n  resetPassword: (token, password) => api.post('/auth/reset-password', {\n    token,\n    password\n  })\n};\n\n// Investments API\nexport const investmentsAPI = {\n  getAll: () => api.get('/investments'),\n  getPortfolio: () => api.get('/investments/portfolio'),\n  add: investment => api.post('/investments', investment),\n  update: (id, updates) => api.put(`/investments/${id}`, updates),\n  delete: id => api.delete(`/investments/${id}`),\n  refreshPrices: () => api.post('/investments/refresh-prices')\n};\n\n// Health check\nexport const healthCheck = () => api.get('/health');\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","getUser","get","updateNotifications","preferences","put","forgotPassword","email","resetPassword","password","investmentsAPI","getAll","getPortfolio","add","investment","update","id","updates","delete","refreshPrices","healthCheck"],"sources":["/Users/nishantchinchole/Documents/Investment Tracker /src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  getUser: () => api.get('/auth/user'),\n  updateNotifications: (preferences) => api.put('/auth/notifications', preferences),\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\n  resetPassword: (token, password) => api.post('/auth/reset-password', { token, password }),\n};\n\n// Investments API\nexport const investmentsAPI = {\n  getAll: () => api.get('/investments'),\n  getPortfolio: () => api.get('/investments/portfolio'),\n  add: (investment) => api.post('/investments', investment),\n  update: (id, updates) => api.put(`/investments/${id}`, updates),\n  delete: (id) => api.delete(`/investments/${id}`),\n  refreshPrices: () => api.post('/investments/refresh-prices'),\n};\n\n// Health check\nexport const healthCheck = () => api.get('/health');\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}